{"ast":null,"code":"import axios from \"axios\";\nimport baseURL from \"../../../utils/baseURL\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\n//initialState\nconst initialState = {\n  loading: false,\n  //loading for all state\n  error: null,\n  users: [],\n  user: null,\n  profile: {},\n  userAuth: {\n    loading: false,\n    //Loading for authentication state\n    error: null,\n    userInfo: {}\n  }\n};\n\n//Login Action\nexport const loginUserAction = createAsyncThunk(\"users/login\", async (_ref, _ref2) => {\n  let {\n    email,\n    password\n  } = _ref;\n  let {\n    rejectWithValue,\n    getState,\n    dispatch\n  } = _ref2;\n  try {\n    //make http request\n    const {\n      data\n    } = await axios.post(`${baseURL}/users/login`, {\n      email,\n      password\n    });\n    //\n    return data;\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n});\n\n// Users Slice\n\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState,\n  extraReducers: builder => {\n    //handle action\n\n    //login  (pending)\n    builder.addCase(loginUserAction.pending, (state, action) => {\n      state.userAuth.loading = true;\n    });\n\n    //(fulfilled)\n    builder.addCase(loginUserAction.fulfilled, (state, action) => {\n      state.userAuth.userInfo = action.payload;\n      state.userAuth.loading = false;\n    });\n\n    //(rejected)\n    builder.addCase(loginUserAction.rejected, (state, action) => {\n      state.userAuth.error = action.payload;\n      state.userAuth.loading = false;\n    });\n  }\n});\n\n//generate reducer\nconst usersReducer = usersSlice.reducer;\nexport default usersReducer;","map":{"version":3,"names":["axios","baseURL","createAsyncThunk","createSlice","initialState","loading","error","users","user","profile","userAuth","userInfo","loginUserAction","_ref","_ref2","email","password","rejectWithValue","getState","dispatch","data","post","_error$response","response","usersSlice","name","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","usersReducer","reducer"],"sources":["C:/Users/Asus/OneDrive/Developer/onGoing projects/e-commerce/react-client/src/redux/slice/users/usersSlice.js"],"sourcesContent":["import axios from \"axios\";\r\nimport baseURL from \"../../../utils/baseURL\";\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\n//initialState\r\nconst initialState = {\r\n  loading: false, //loading for all state\r\n  error: null,\r\n  users: [],\r\n  user: null,\r\n  profile: {},\r\n  userAuth: {\r\n    loading: false, //Loading for authentication state\r\n    error: null,\r\n    userInfo: {},\r\n  },\r\n};\r\n\r\n//Login Action\r\nexport const loginUserAction = createAsyncThunk(\r\n  \"users/login\",\r\n  async ({ email, password }, { rejectWithValue, getState, dispatch }) => {\r\n    try {\r\n      //make http request\r\n      const { data } = await axios.post(`${baseURL}/users/login`, {\r\n        email,\r\n        password,\r\n      });\r\n      //\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error?.response?.data);\r\n    }\r\n  }\r\n);\r\n\r\n\r\n// Users Slice\r\n\r\nconst usersSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  extraReducers: (builder) => {\r\n    //handle action\r\n\r\n    //login  (pending)\r\n    builder.addCase(loginUserAction.pending, (state, action) => {\r\n      state.userAuth.loading = true;\r\n    });\r\n\r\n    //(fulfilled)\r\n    builder.addCase(loginUserAction.fulfilled, (state, action) => {\r\n      state.userAuth.userInfo = action.payload;\r\n      state.userAuth.loading = false;\r\n    });\r\n\r\n    //(rejected)\r\n    builder.addCase(loginUserAction.rejected, (state, action) => {\r\n      state.userAuth.error = action.payload;\r\n      state.userAuth.loading = false;\r\n    });\r\n  },\r\n});\r\n\r\n//generate reducer\r\nconst usersReducer = usersSlice.reducer;\r\n\r\nexport default usersReducer;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,SAASC,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;;AAEhE;AACA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KAAK;EAAE;EAChBC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,CAAC,CAAC;EACXC,QAAQ,EAAE;IACRL,OAAO,EAAE,KAAK;IAAE;IAChBC,KAAK,EAAE,IAAI;IACXK,QAAQ,EAAE,CAAC;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAGV,gBAAgB,CAC7C,aAAa,EACb,OAAAW,IAAA,EAAAC,KAAA,KAAwE;EAAA,IAAjE;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAAA,IAAE;IAAEI,eAAe;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAAL,KAAA;EACjE,IAAI;IACF;IACA,MAAM;MAAEM;IAAK,CAAC,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAE,GAAEpB,OAAQ,cAAa,EAAE;MAC1Dc,KAAK;MACLC;IACF,CAAC,CAAC;IACF;IACA,OAAOI,IAAI;EACb,CAAC,CAAC,OAAOd,KAAK,EAAE;IAAA,IAAAgB,eAAA;IACd,OAAOL,eAAe,CAACX,KAAK,aAALA,KAAK,wBAAAgB,eAAA,GAALhB,KAAK,CAAEiB,QAAQ,cAAAD,eAAA,uBAAfA,eAAA,CAAiBF,IAAI,CAAC;EAC/C;AACF,CAAC,CACF;;AAGD;;AAEA,MAAMI,UAAU,GAAGrB,WAAW,CAAC;EAC7BsB,IAAI,EAAE,OAAO;EACbrB,YAAY;EACZsB,aAAa,EAAGC,OAAO,IAAK;IAC1B;;IAEA;IACAA,OAAO,CAACC,OAAO,CAAChB,eAAe,CAACiB,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1DD,KAAK,CAACpB,QAAQ,CAACL,OAAO,GAAG,IAAI;IAC/B,CAAC,CAAC;;IAEF;IACAsB,OAAO,CAACC,OAAO,CAAChB,eAAe,CAACoB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MAC5DD,KAAK,CAACpB,QAAQ,CAACC,QAAQ,GAAGoB,MAAM,CAACE,OAAO;MACxCH,KAAK,CAACpB,QAAQ,CAACL,OAAO,GAAG,KAAK;IAChC,CAAC,CAAC;;IAEF;IACAsB,OAAO,CAACC,OAAO,CAAChB,eAAe,CAACsB,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC3DD,KAAK,CAACpB,QAAQ,CAACJ,KAAK,GAAGyB,MAAM,CAACE,OAAO;MACrCH,KAAK,CAACpB,QAAQ,CAACL,OAAO,GAAG,KAAK;IAChC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA,MAAM8B,YAAY,GAAGX,UAAU,CAACY,OAAO;AAEvC,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}